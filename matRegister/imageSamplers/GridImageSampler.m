classdef GridImageSampler < ImageSampler
%GRIDIMAGESAMPLER Samples elements along a subgrid in image.
%
%   output = GridImageSampler(input)
%
%   Example
%   GridImageSampler
%
%   See also
%

% ------
% Author: David Legland
% e-mail: david.legland@inra.fr
% Created: 2011-07-20,    using Matlab 7.9.0.529 (R2009b)
% Copyright 2011 INRA - Cepia Software Platform.

%% Properties
properties
    % the base image
    Image;
    
    % the steps in each dimension
    Steps;
end


%% Static factory
methods (Static = true)
    function sampler = create(image, steps)
        sampler = GridImageSampler(image, steps);
    end
end


%% Constructor
methods
    function obj = GridImageSampler(varargin)
        
        if nargin < 1
            return;
        end
        
        var = varargin{1};
        if isa(var, 'Image')
            % initialisation constructor
            obj.Image = var;
            obj.Steps = varargin{2};
            
        elseif isa(var, 'GridImageSampler')
            % copy constructor
            obj.Image = var.Image;
            
        end
        
    end
end


%% General methods
methods
    function n = positionNumber(obj)
        % Number of positions generated by obj sampler
        n = prod(size(obj.Image)); %#ok<PSIZE>
    end
    
    function points = positions(obj)
        % Return the array of sampled positions
        
        lx = xData(obj.Image);
        lx = lx(1:obj.Steps(1):end);
        ly = yData(obj.Image);
        ly = ly(1:obj.Steps(2):end);
        
        nd = ndims(obj.Image);
        if nd == 2
            [x, y] = meshgrid(lx, ly);
            points = [x(:) y(:)];
            
        elseif nd == 3
            lz = zData(obj.Image);
            lz = lz(1:obj.Steps(3):end);

            [x, y, z] = meshgrid(lx, ly, lz);
            points = [x(:) y(:) z(:)];
            
        else
            error(['Not implemented for dimension ' num2str(nd)]);
        end
    end
    
end

end